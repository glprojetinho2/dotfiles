#!/bin/zsh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.
# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

pkill waybar
riverctl spawn waybar
for command in syncthing keepassxc dunst 'arti proxy'
do
    grep_cmd='pgrep'
    if [[ $command = *" "* ]]; then
        grep_cmd='pgrep -f'
    fi
    eval "$grep_cmd '$command'" || riverctl spawn $command
done

riverctl focus-follows-cursor normal

SHELL_COMMAND='zsh -ic'
TERMINAL="alacritty -e $SHELL_COMMAND"

riverctl map normal Super Z spawn "$SHELL_COMMAND screen_recorder"
riverctl map normal Super+Shift Z spawn "$SHELL_COMMAND 'screen_recorder --area'"
riverctl map normal Super P spawn 'rofi -show drun'
riverctl map normal Super+Shift W spawn archwiki-offline
riverctl map normal None Print spawn "grim - > /tmp/print.png && cat /tmp/pring.png | wl-copy -t 'image/png'"
riverctl map normal Super Print spawn "grim -g \"\$(slurp -d)\" - > /tmp/print.png && cat /tmp/print.png | wl-copy -t 'image/png'"
riverctl map normal Super F2 spawn qutebrowser
riverctl map normal Super+Shift F2 spawn "qutebrowser --basedir ~/.config/qutebrowser-for-shitty-websites/"
riverctl map normal Super F3 spawn "$TERMINAL y"
riverctl map normal Super F4 spawn anki
riverctl map normal Super F5 spawn "pactl set-sink-volume @DEFAULT_SINK@ -5%"
riverctl map normal Super F6 spawn "pactl set-sink-volume @DEFAULT_SINK@ +5%"
riverctl map normal Super F7 spawn "musicipc toggleplay"
riverctl map normal Super F8 spawn "musicipc minusminute"
riverctl map normal Super F9 spawn "musicipc plusminute"
riverctl map normal Super F11 spawn "musicipc prev"
riverctl map normal Super F12 spawn "musicipc next"
riverctl map normal Super Y spawn youtube_menu
riverctl map normal Super+Shift Y spawn youtube_music_menu
riverctl map normal Super+Shift R spawn ~/.config/river/init
riverctl map normal Super G spawn "$TERMINAL 'tgpt --multiline'"

# Super+Shift+Return to start an instance of alacritty 
riverctl map normal Super+Shift Return spawn alacritty

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift E exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

scratch_tag=$((1 << 20 ))

riverctl map normal Super minus toggle-focused-tags ${scratch_tag}		# toggle the scratchpad
riverctl map normal Super+Shift minus set-view-tags ${scratch_tag}		# send windows to the scratchpad

# Set spawn tagmask to ensure new windows do not have the scratchpad tag unless explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super+Shift F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super+Shift F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x000000
riverctl border-color-focused 0xffffff
riverctl border-color-unfocused 0x000000

# Set keyboard repeat rate
riverctl set-repeat 50 500
riverctl keyboard-layout br

riverctl rule-add -title '_TODO.TXT_' tags $(( 1 << 20 ))
riverctl rule-add -title '_TODO.TXT_' float
pgrep -f _TODO.TXT_ || riverctl spawn "alacritty -o 'window.title=\"_TODO.TXT_\"' -e helix -w ~/Anotações ~/Anotações/todo.txt & disown"

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id bar csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6 &
